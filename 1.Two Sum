Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].



class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int i, j;
        i = 0;
        j = nums.size() - 1;
        vector<int> two_sum;
        vector<int> temp;
        temp = nums;
        sort(nums.begin(), nums.end());
        while(i < j)
        {
            int sum = nums[i]+ nums[j];
            if(sum == target)
            {
                for(int k = 0; k < temp.size(); k ++)
                {
                    if(temp[k] == nums[i] || temp[k] == nums[j])
                    {
                        two_sum.push_back(k);
                    }
                }
                return two_sum;
            }
            else if(sum > target)
            {
                j --;
            }
            else
            {
                i ++;
            }
        }
        return two_sum;
    }
};
